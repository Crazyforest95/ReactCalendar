{"version":3,"sources":["views/StaticCal.js","App.js","serviceWorker.js","index.js"],"names":["StaticCal","props","onNext","bind","onPrevious","state","showDate","current","Date","year","month","day","a_monthdays","a_months","days","this","setState","getFullYear","getMonth","makeMonthTable","setLeapYear","setFullYear","setMonth","String","startday","getDay","i","c_monthdays","className","Avatar","Button","onClick","variant","color","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5c95bb7.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/StaticCal.scss'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass StaticCal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onNext = this.onNext.bind(this)\r\n        this.onPrevious = this.onPrevious.bind(this)\r\n        this.state = {\r\n            showDate: '',\r\n            current: new Date(),\r\n            year: -1,\r\n            month: -1,\r\n            day: -1,\r\n            a_monthdays: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n            a_months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n            days: []\r\n        }\r\n    }\r\n    async componentWillMount() {\r\n        await this.setState({\r\n            year: this.state.current.getFullYear(),\r\n            month: this.state.current.getMonth()\r\n        })\r\n        this.makeMonthTable()\r\n    }\r\n    async onNext() {\r\n        if (this.state.month === 11) {\r\n            await this.setState({\r\n                year: this.state.year + 1,\r\n                month: 0,\r\n            })\r\n        } else {\r\n            await this.setState({\r\n                month: this.state.month + 1\r\n            })\r\n        }\r\n        this.makeMonthTable()\r\n    }\r\n    async onPrevious() {\r\n        if (this.state.month === 0) {\r\n            await this.setState({\r\n                year: this.state.year - 1,\r\n                month: 11\r\n            })\r\n        } else {\r\n            await this.setState({\r\n                month: this.state.month - 1\r\n            })\r\n        }\r\n        this.makeMonthTable()\r\n    }\r\n    async makeMonthTable() {\r\n        this.setLeapYear()\r\n        var current = new Date()\r\n        current.setFullYear(this.state.year)\r\n        current.setMonth(this.state.month)\r\n        await this.setState({\r\n            day: this.state.a_monthdays[this.state.month],\r\n            showDate: String(this.state.a_months[this.state.month]) + String(this.state.year),\r\n            current: current\r\n        })\r\n        var startday = this.state.current.getDay()\r\n        var days = []\r\n        for (let i = 0; i < this.state.day; i++)\r\n            days[(i + startday) % 35] = i + 1\r\n        await this.setState({days: days})\r\n    }\r\n    async setLeapYear() {\r\n        var c_monthdays = this.state.a_monthdays\r\n        if (this.state.year % 400 === 0 || (this.state.year % 100 !== 0 && this.state.year % 4 === 0))\r\n            c_monthdays[1] = 29\r\n        else\r\n            c_monthdays[1] = 28\r\n        await this.setState({a_monthdays: c_monthdays})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"staticcalc\">\r\n                <div className=\"showdate\">\r\n                    <Avatar><Button onClick={this.onPrevious} variant=\"contained\" color=\"primary\"><i className=\"material-icons iconsize\">navigate_before</i></Button></Avatar>\r\n                    <h1>{this.state.showDate}</h1>\r\n                    <Avatar><Button onClick={this.onNext} variant=\"contained\" color=\"primary\"><i className=\"material-icons iconsize\">navigate_next</i></Button></Avatar>\r\n                </div>\r\n                <table className=\"container\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><h1>Sun</h1></th>\r\n                            <th><h1>Mon</h1></th>\r\n                            <th><h1>Tue</h1></th>\r\n                            <th><h1>Wed</h1></th>\r\n                            <th><h1>Thu</h1></th>\r\n                            <th><h1>Fri</h1></th>\r\n                            <th><h1>Sat</h1></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.days[0]}</td>\r\n                            <td>{this.state.days[1]}</td>\r\n                            <td>{this.state.days[2]}</td>\r\n                            <td>{this.state.days[3]}</td>\r\n                            <td>{this.state.days[4]}</td>\r\n                            <td>{this.state.days[5]}</td>\r\n                            <td>{this.state.days[6]}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.days[7]}</td>\r\n                            <td>{this.state.days[8]}</td>\r\n                            <td>{this.state.days[9]}</td>\r\n                            <td>{this.state.days[10]}</td>\r\n                            <td>{this.state.days[11]}</td>\r\n                            <td>{this.state.days[12]}</td>\r\n                            <td>{this.state.days[13]}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.days[14]}</td>\r\n                            <td>{this.state.days[15]}</td>\r\n                            <td>{this.state.days[16]}</td>\r\n                            <td>{this.state.days[17]}</td>\r\n                            <td>{this.state.days[18]}</td>\r\n                            <td>{this.state.days[19]}</td>\r\n                            <td>{this.state.days[20]}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.days[21]}</td>\r\n                            <td>{this.state.days[22]}</td>\r\n                            <td>{this.state.days[23]}</td>\r\n                            <td>{this.state.days[24]}</td>\r\n                            <td>{this.state.days[25]}</td>\r\n                            <td>{this.state.days[26]}</td>\r\n                            <td>{this.state.days[27]}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.days[28]}</td>\r\n                            <td>{this.state.days[29]}</td>\r\n                            <td>{this.state.days[30]}</td>\r\n                            <td>{this.state.days[31]}</td>\r\n                            <td>{this.state.days[32]}</td>\r\n                            <td>{this.state.days[33]}</td>\r\n                            <td>{this.state.days[34]}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default StaticCal;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport StaticCal from \"./views/StaticCal\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"animationground\">\n          <StaticCal />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}